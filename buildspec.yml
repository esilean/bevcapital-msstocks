version: 0.2
env:
  variables:
    ECR_REPO: $$ACCOUNT_ID$$.dkr.ecr.$$AWS_REGION$$.amazonaws.com
phases:
  install:
    runtime-versions:
      docker: 19
  pre_build:
    commands:
  build:
    commands:
      - echo Replacing variables to create erc repo url
      - ECR_REPO=$(echo "$ECR_REPO" | sed 's/\$\$AWS_REGION\$\$/'"${AWS_REGION}"'/g')
      - ECR_REPO=$(echo "$ECR_REPO" | sed 's/\$\$ACCOUNT_ID\$\$/'"${ACCOUNT_ID}"'/g')

      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo $IMAGE_TAG

      - REPO_STOCKS_NAME=bevcapital-msstocks
      - REPO_STOCKS_NGINX_NAME=bevcapital-msstocks-nginx
      - REPO_STOCKS_XRAY_NAME=bevcapital-msstocks-xray

      - echo Building the production Docker image...
      # Microservice Image
      - docker build -t ${REPO_STOCKS_NAME} -f ./Dockerfile ./src
      - docker tag ${REPO_STOCKS_NAME} ${ECR_REPO}/${REPO_STOCKS_NAME}:$IMAGE_TAG
      - docker tag ${REPO_STOCKS_NAME} ${ECR_REPO}/${REPO_STOCKS_NAME}:latest

      # Nginx Daemon Image
      - docker build -t ${REPO_STOCKS_NGINX_NAME} -f ./nginx/Dockerfile ./nginx
      - docker tag ${REPO_STOCKS_NGINX_NAME} ${ECR_REPO}/${REPO_STOCKS_NGINX_NAME}:$IMAGE_TAG
      - docker tag ${REPO_STOCKS_NGINX_NAME} ${ECR_REPO}/${REPO_STOCKS_NGINX_NAME}:latest

      # X-Ray Daemon Image
      - docker build -t ${REPO_STOCKS_XRAY_NAME} -f ./xray/Dockerfile ./xray
      - docker tag ${REPO_STOCKS_XRAY_NAME} ${ECR_REPO}/${REPO_STOCKS_XRAY_NAME}:$IMAGE_TAG
      - docker tag ${REPO_STOCKS_XRAY_NAME} ${ECR_REPO}/${REPO_STOCKS_XRAY_NAME}:latest

  post_build:
    commands:
      # Take these images and push them to ECR
      - echo Pushing the Docker images...
      - docker push ${ECR_REPO}/${REPO_STOCKS_NAME}:latest
      - docker push ${ECR_REPO}/${REPO_STOCKS_NAME}:$IMAGE_TAG

      - docker push ${ECR_REPO}/${REPO_STOCKS_NGINX_NAME}:latest
      - docker push ${ECR_REPO}/${REPO_STOCKS_NGINX_NAME}:$IMAGE_TAG

      - docker push ${ECR_REPO}/${REPO_STOCKS_XRAY_NAME}:latest
      - docker push ${ECR_REPO}/${REPO_STOCKS_XRAY_NAME}:$IMAGE_TAG

      # Generate json with service images endpoint
      - printf '{' >> serviceimages.json
      - printf ' "ServiceImageUrl":"%s", ' ${ECR_REPO}/${REPO_STOCKS_NAME}:latest >> serviceimages.json
      - printf ' "NginxImageUrl":"%s", ' ${ECR_REPO}/${REPO_STOCKS_NGINX_NAME}:latest >> serviceimages.json
      - printf ' "XRayImageUrl":"%s" ' ${ECR_REPO}/${REPO_STOCKS_XRAY_NAME}:latest >> serviceimages.json
      - printf '}' >> serviceimages.json
artifacts:
  files:
    - serviceimages.json
